---
title: "Data analysis"
author: "Mariane Modena"
format: html
---

```{r}
here::i_am("r-101-grade-analysis.Rproj")
library(dplyr)
library(ggplot2)
library(vroom)
```
## Question 1

```{r}
grades <- vroom("grades.csv")
```
## Question 2

```{r}
exam_grades <- 
  grades |>
  summarise('max'=max(Exam, na.rm=TRUE), 'min'=min(Exam, na.rm=TRUE), 'median'=median(Exam, na.rm=TRUE), 'mean'=mean(Exam, na.rm=TRUE))

knitr::kable(exam_grades, caption='Descriptive statistics on the grades received at the exam')
```
## Question 3

```{r}
NA_exam <- 
  grades |>
  filter(is.na(Exam))
```

`r nrow(NA_exam)` students didn't take the exam.

## Question 4

We first compute a dataset with no 'NA' values in the 'Exam' column from the grades dataset. Using this new dataset when plotting the distribution of the Exam grades avoids warnings from ggplot2.

```{r}
No_NA_exam <-
  grades |>
  filter(!is.na(Exam))
```


```{r}
ggplot(No_NA_exam, aes(x=Exam))+
  geom_bar()+
  scale_x_continuous(breaks = scales::pretty_breaks(n = 20))+
  labs(title='Distribution of the grades received at the exam', x='Exam grades' )
```
Note: we could also use a geom density, but it only captures the global shape of the distribution and therefore fails to highlight the lower counts of grades that end with '.5'.

## Question 5 

```{r}
students_per_group <-
  grades |>
  group_by(Group)|>
  summarise('Number of students'=n())
  
knitr::kable(students_per_group)
```

## Question 6 

we create a column with only the group number to have a more readable x axis when plotting.
```{r}
ggplot(
  grades |>
  mutate('Group number' = gsub("grp_", "", grades$Group)),
  aes(x=`Group number`))+
  geom_bar()+
  labs(title ='Number of students per group')

```

## Question 7

### First solution (boxplots)

```{r}
ggplot(
  No_NA_exam |>
  mutate('Group number' = gsub("grp_", "", No_NA_exam$Group)),
  aes(x=`Group number`, y=Exam))+
  geom_boxplot()+
  labs(title='Distribution of the grades received at the Exam conditionned by the group')
  
  
```

### Second solution (violins)

```{r}
ggplot(
  No_NA_exam |>
  mutate('Group number' = gsub("grp_", "", No_NA_exam$Group)),
  aes(x=`Group number`, y=Exam))+
  geom_violin(draw_quantiles = c(0.25, 0.75))+
  stat_summary(fun.y=median, geom='point', color='red')+
  labs(title='Distribution of the grades received at the Exam conditionned by the group')
```

## Question 8 

```{r}
NA_students_per_group <-
  grades |>
  group_by(Group)|>
  summarise('Missing grades (Exam)'=sum(is.na(Exam)))

knitr::kable(NA_students_per_group)

```

## Question 9

```{r}
ggplot(NA_students_per_group |>
       mutate('Group number' = gsub("grp_", "", NA_students_per_group$Group)),
       aes(x=`Group number`, y=`Missing grades (Exam)`))+
geom_col()+
labs(title='Number of students who did not take the exam per group')
       
```
## Question 10

```{r}
library(tidyr)
```

```{r}
long_grades <-
  grades |>
  pivot_longer(cols=-c('Id','Group'), names_to='name')

long_grades
```

## Question 11

```{r}
missing_grades_per_student <-
  long_grades |>
  group_by(Id) |>
  summarise('Missing grades'=sum(is.na(value)))

missing_grades_per_student
```

## Question 12

```{r}
ggplot(missing_grades_per_student, aes(x=`Missing grades`))+
  geom_bar()+
  labs(title='Distribution of the number of missing grade per student')
```
## Question 13

```{r}
library(stringr)
```

```{r}
NA_students_per_group_2 <-
  long_grades |>
  filter(str_starts(name, "Exam"))|>
  group_by(Group)|>
  summarise('Missing grades (Exam)'=sum(is.na(value)))
```

## Question 14

```{r}
missing_grades_per_student_online <-
  long_grades |>
  filter(str_starts(name, "Online"))|>
  group_by(Id)|>
  summarise('missing grades (Online)'=sum(is.na(value)))

missing_grades_per_student_online
```

## Question 15

We are going to join two tables :
- the table of students who didn't miss the exam (No NA exam), since we want the distributions of grades at the Exam without warning from Ggplot2
- The table that counts the number of missing grades at online tests for each student. This one is longer than the previous one, since the student who missed the Exam appear in that table but not in the previous one.


```{r}
join <- inner_join(No_NA_exam, missing_grades_per_student_online, join_by(Id))
  
```

We use an inner join that will not take into account the students that are in the missing_grades_per_student table but not in the No_NA_Exam table (a left join would also work)

```{r}
ggplot(join, aes(x=`missing grades (Online)`, y=Exam, group=`missing grades (Online)`))+
  geom_boxplot()+
  labs(title='Distribution of the grades at the Exam conditional on the number of missing grades at online tests')
```

## Question 16

```{r}
missed_MCQ <-
  long_grades |>
  filter(str_starts(name, "MCQ_"))|>
  group_by(Id) |>
  summarise(
    'Missed'=if_else(sum(is.na(value))==0, FALSE, TRUE)
    )
  
  
missed_MCQ   
```

## Question 17

```{r}
missed_MCQ_group <-
  long_grades |>
  filter(str_starts(name, "MCQ_"))|>
  group_by(Group, Id)|>
  mutate('Missed at least 1 MCQ'=if_else(sum(is.na(value))==0,0,1)) |>
  group_by(Group) |>
  summarise('P_missed'=sum(`Missed at least 1 MCQ`)/n()*100)

  
missed_MCQ_group 
```

